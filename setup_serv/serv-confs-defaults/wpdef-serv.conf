# Listen on port 80, redirect wordress on 443, and other ssl stuff on 8080
upstream index_php_upstream {
    server 127.0.0.1:8090; # NGINX Unit backend address for index.php with
                           # 'script' parameter
}

upstream direct_php_upstream {
    server 127.0.0.1:8091; # NGINX Unit backend address for generic PHP file handling
}



server {
    server_name domain.dns;
    root /var/www/;
    index index.html;
    
    listen 8080 ssl http2; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/domain.dns/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/domain.dns/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}



server {
    server_name domain.dns;
    root /var/www/wordpress;
    index index.php;

	location / {
        try_files $uri @index_php;
    }   
            
    location @index_php {
        proxy_pass       http://index_php_upstream;
        proxy_set_header Host $host;
    }

    location /wp-admin {
        index index.php;
    }

    location ~* .php$ {
        try_files        $uri =404;
        proxy_pass       http://direct_php_upstream;
        proxy_set_header Host $host;
    }

	#client side caching
	    # Media: images, icons, video, audio, HTC
	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc)$ {
		access_log off;
		add_header Cache-Control "max-age=2592000";
	}
	    # CSS and Javascript
	    location ~* \.(?:css|js)$ {
	      add_header Cache-Control "max-age=31536000";
	      access_log off;
	}

	listen 443 ssl http2; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/dmltc3v4.cf/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/dmltc3v4.cf/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
	root /var/www/wordpress;
	listen 80;
	server_name domain.dns;

	location / {
		return 301 https://$host$request_uri:443;
	}
	#return 404; # managed by Certbot
}
