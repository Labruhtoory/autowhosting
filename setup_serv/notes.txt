


3)

sudo systemctl start nginx php7.4-fpm monit
sudo systemctl enable mysql nginx php7.4-fpm monit

4)

cd /etc/nginx/
mv nginx.conf nginx.conf.ORIG
nano nginx.conf
        > insert nginx.conf
mkdir -p /usr/share/nginx/cache/fcgi
nginx -t
systemctl reload nginx

5)

mkdir /run/php-fpm

mv /etc/php/7.4/fpm/php-fpm.conf /etc/php/7.4/fpm/php-fpm.conf.ORIG
nano /etc/php/7.4/fpm/php-fpm.conf
        > insert php-fpm.conf
rm /etc/php/7.4/fpm/pool.d/www.conf
nano /etc/php/7.4/fpm/pool.d/www.conf
        > insert www.conf
mv /etc/php/7.4/fpm/php.ini /etc/php/7.4/fpm/php.ini.ORIG
nano /etc/php/7.4/fpm/php.ini
        > insert php.ini
systemctl restart php7.4-fpm

6)

mysql_secure_installation
systemctl restart mysql

7)

adduser tutorialinux
mkdir -p /home/tutorialinux/logs
chown tutorialinux:www-data /home/tutorialinux/logs/
nano /etc/nginx/conf.d/tutorialinux.conf
        > insert sitename.conf
rm /etc/nginx/sites-enabled/default
nano /etc/php/7.4/fpm/pool.d/tutorialinux.conf
        > insert pool.conf
rm /etc/php/7.4/fpm/pool.d/www.conf
sudo -u tutorialinux touch /home/tutorialinux/logs/phpfpm_error.log


mysql -u root -p
CREATE DATABASE tutorialinux;
CREATE USER 'tutorialinux'@'localhost' IDENTIFIED BY 'chooseapassword';
GRANT ALL PRIVILEGES ON tutorialinux.* TO tutorialinux@localhost;
FLUSH PRIVILEGES;


cd /home/tutorialinux
wget https://wordpress.org/latest.tar.gz
tar zxf latest.tar.gz
rm latest.tar.gz
mv wordpress public_html
cd public_html
chown -R tutorialinux:www-data .
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;
systemctl restart php7.4-fpm
systemctl restart nginx
